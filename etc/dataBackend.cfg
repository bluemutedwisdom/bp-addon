# Business Process AddOns for Nagios and Icinga get actual data from some kind of
# data backend. This is configured below. 

# Business Process AddOns can get data from the NDO/IDO database (ndo2db/ido2db) or
# filesystem (ndo2fs) or the Merlin database or the Icinga-Web JSON API or
# they can be asked for directly from Nagios/Icinga using mk_livestatus
#
# this file configures, where to take information from
# in releases up to 0.9.2 this file was called ndo_db_readonly.cfg
# (because up to this point, the database was the only supported interface)
# and in releases 0.9.3 to 0.9.6 it was called ndo.cfg

# tells if NDO/IDO data is to be taken from a NDO database (db), from Merlin database
# (merlin), from the filesystem (fs), from mk_livestatus (mk_livestatus)
# or Icinga-Web API (icinga-web)
# allowed values are db, merlin, fs, mk_livestatus or icinga-web 
backend=db
# backend=merlin
# backend=fs
# backend=mk_livestatus
# backend=icinga-web

#
# settings if You use backend=fs
#

# ndofs_basedir is the directory where ndo2fs stores status information
# (this directory has the two subdirectories PERSISTENT and VOLATILE)
ndofs_basedir=/usr/local/ndo2fs/var

# the instance name of ndo2fs
# (this is the name of the subdirectory in <ndofs_basedir>/PERSISTENT You want to use)
ndofs_instance_name=default

#
# settings if You use backend=mk_livestatus
#

# livestatus_socket gives the full path of mk_livestatus' unix socket
livestatus_socket=/usr/local/nagios/var/rw/live

#
# settings if You use backend=db or backend=merlin
#

# The hostname or IP and the port of the server running Your NDO or IDO or Merlin database
db_host=localhost
db_port=3306

# Name of Your NDO or IDO or Merlin database (instance name)
db_database=nagios
#db_database=icinga

# Username and password to connect to the database
db_username=nagiosro
db_password=dummy

# Prefix
# all tablenames of Your NDO or IDO or Merlin database start with the same prefix
# enter this prefix here (default for NDO: nagios_
# for IDO: icinga_
# for Merlin: NULL)
# e. g. look for a table calles
# <something>objects
# enter <something> here
db_prefix=ndo_
#db_prefix=nagios_
#db_prefix=icinga_

#
# settings if You use backend=icinga-web
#

# the URL of Your Icinga-Web interface
icinga_web_url_prefix=http://localhost/icinga-web/

# auth_key to connect to Icinga-Web
# (add one additional user in the Icinga Web especially for the
# Business Process Addons, select Auth by auth_key,
# choose an auth_key and enter it in the field "Authkey for API"
# add the principal appkit.api.access and create the user
# the auth_key you did choose is to be entered below)
icinga_web_auth_key=dummydummy

#
# common settings
# (valid for all backends)
#

# Cache
# starting with version 0.9.4 You can configure to cache states we just got from
# the database or filesystem so that the next process can use them
# especially if You have a big installation of Nagios Business Process AddOns
# and have configured the business processes to be Nagios Services, this can
# bring You much speed with much lower load on Your monitoring server
# but the results are not so fresh as they could be
# so You decide!

# for this time in seconds states are cached
cache_time=0
# where to store cached states
cache_file=/usr/local/bp-addon/var/cache/backend_cache
